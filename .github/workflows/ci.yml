name: CI

on: [push, pull_request]

jobs:
  main:
    strategy:
      fail-fast: false
    runs-on: ubuntu-20.04
    container: ghcr.io/mopidy/gst-plugin-spotify-build:latest
    env:
      GST_PLUGIN: gst-plugin-spotify
      RUST_TARGET: arm-unknown-linux-gnueabihf
      LINKER_TARGET: arm-linux-gnueabihf
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
        targets: ${{ env.RUST_TARGET }}
        
    - name: Checkout gst-plugins-rs
      run: |
        GST_GIT_REPO=https://gitlab.freedesktop.org/gstreamer/gst-plugins-rs.git
        GST_GIT_BRANCH=main
        git clone --depth 1 -b $GST_GIT_BRANCH $GST_GIT_REPO
        cp gst-plugins-rs/audio/spotify/Cargo.toml Cargo.toml.orig
        echo ${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo stuff
      uses: actions/cache@v3
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-${{ env.RUST_TARGET }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install cargo deb
      run: cargo install cargo-deb
 
    - name: Configure environment variables
      run: |
        PKG_CONFIG_ALLOW_CROSS=1
        PKG_CONFIG_PATH="/usr/lib/${{ env.LINKER_TARGET }}/pkgconfig"
        echo "PKG_CONFIG_ALLOW_CROSS=$PKG_CONFIG_ALLOW_CROSS" >> $GITHUB_ENV
        echo "PKG_CONFIG_PATH=PKG_CONFIG_PATH" >> $GITHUB_ENV
        if [[ '${{ env.LINKER_TARGET }}' == 'arm-linux-gnueabihf' ]]; then
          RPI_STUFF="/rpi-tools/arm-bcm2708/arm-linux-gnueabihf"
          RPI_SYSROOT="$RPI_STUFF/arm-linux-gnueabihf/sysroot"
          RPI_LINKER="$RPI_STUFF/bin/arm-linux-gnueabihf-gcc"
          RUSTFLAGS="-C linker=$RPI_LINKER -L$RPI_SYSROOT/lib -L$RPI_SYSROOT/usr/lib"
          echo "RUSTFLAGS=$RUSTFLAGS" >> $GITHUB_ENV
          echo "I am PI"
        fi
    
    - name: Build gst-plugins-rs
      run: |
        env
        echo "PKG_CONFIG_PATH is $PKG_CONFIG_PATH"
        echo "PKG_CONFIG_ALLOW_CROSS is $PKG_CONFIG_ALLOW_CROSS"
        echo "RUSTFLAGS is $RUSTFLAGS"
        cd gst-plugins-rs
        cargo build --target=${{ env.RUST_TARGET }} --package ${{ env.GST_PLUGIN }} --release --config 'profile.release.strip = true'
   
    - name: Prep deb control
      run: |
        export PKG_CONFIG_PATH="/usr/lib/${{ env.LINKER_TARGET }}/pkgconfig"
        GST_PLUGINS_DIR=$(pkg-config --variable=pluginsdir gstreamer-1.0)
        cat Cargo.toml.orig Cargo.toml.deb | sed "s@%GST_PLUGINS_DIR%@$GST_PLUGINS_DIR@" > gst-plugins-rs/audio/spotify/Cargo.toml
   
    - name: Build deb
      run: |
        cd gst-plugins-rs
        cargo deb --target=${{ env.RUST_TARGET }} --package ${{ env.GST_PLUGIN }} --no-build
        DEB_PATH=$(readlink -m $(find target/${{ env.RUST_TARGET }}/debian/${{ env.GST_PLUGIN }}_*.deb))
        DEB_NAME=$(basename $DEB_PATH .deb)
        echo "DEB_PATH=$DEB_PATH" >> $GITHUB_ENV
        echo "DEB_NAME=$DEB_NAME" >> $GITHUB_ENV
   
    - name: Check deb
      run: dpkg-deb --field ${{ env.DEB_PATH }} Package Architecture Version Installed-Size
   
    - name: Upload deb
      uses: actions/upload-artifact@v3
      with:
          name: ${{ env.DEB_NAME }}
          path: ${{ env.DEB_PATH }}
